package old;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
/**
 *
 * @author Varel Yonathan Simangunsong
 * @nim 205150207111029
 */
public class FrameKategori extends javax.swing.JFrame {
    Connection connection;
    String connectionUrl = 
                "jdbc:sqlserver://localhost;" +
                "database=Project; user=sa; password=12345;" +
                "loginTimeout=30;";
    
    /**
     * Creates new form FrameManageCustomer
     */
    public FrameKategori() {
        initComponents();
        ConnectToSqlServer();
        populateTableAccount();
        ListSelectionModel model = tableAccount.getSelectionModel();
        model.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent lse) {
                if (!model.isSelectionEmpty()) {
                    int index = model.getMinSelectionIndex();
                    String kategori = tableAccount.getModel().getValueAt(index, 0).toString();
                    populateKategori(kategori);
                }
            }
            
        });
        
        this.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                System.out.println("Closing");
                try {
                    connection.close();
                } catch (SQLException ex) {
                }
            }
        });
    }
    
    private void ConnectToSqlServer() {
        try {
            connection = DriverManager.getConnection(connectionUrl);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void populateTableAccount() {
        try {
            String query_sql = "select * from kategori";
            ResultSet rs = runQuery(query_sql);
            DefaultTableModel tableModel = (DefaultTableModel)tableAccount.getModel();
            tableModel.setRowCount(0);

            while (rs.next()) {
                tableModel.addRow(new Object[]{rs.getString("nama_kategori"), rs.getString("deskripsi")});
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
      
    private void populateKategori(String kategori) {
        String qr = String.format("select * from kategori where nama_kategori = '%s'", kategori);
        ResultSet rs = runQuery(qr);
        
        try {
            rs.next();
            textKategori.setText(rs.getString("nama_kategori"));
            teksDeskripsi.setText(rs.getString("deskripsi"));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private boolean dataLengkap() {
        if (textNewKategori.getText().equals("") ||
            textNewDeskripsi.getText().equals(""))
        {
            return false;
        }
        return true;
    }
    
    private ResultSet runQuery(String query_sql) {
        try {
            Statement statement = connection.createStatement();
            ResultSet rs = statement.executeQuery(query_sql);
            return rs;
        } catch (SQLException e) {
            System.out.println("Ada error di run Query");
        }
        return null;
    }
    
    private int runUpdateQuery(String query_sql) {
        try {
            Statement statement = connection.createStatement();
            int updateCount = statement.executeUpdate(query_sql);
            return updateCount;
        } catch (SQLException e) {
            System.out.println("Ada error di run Query");
        }
        return 0;
    }
    
    private void resetForm() {
        textNewKategori.setText("");
        textNewDeskripsi.setText("");
    }
//    private boolean cekJabatan(){
//        if(text)
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableAccount = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        buttonSaveProfile = new javax.swing.JButton();
        buttonDeletAccount = new javax.swing.JButton();
        buttonNewAccount = new javax.swing.JButton();
        textSearch = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        textKategori = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        exitButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        textNewKategori = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        teksDeskripsi = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        textNewDeskripsi = new javax.swing.JTextArea();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel1.setText("Daftar Kategori");

        jLabel2.setText("Daftar Kategori");

        tableAccount.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama Kategori", "Deskripsi"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableAccount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableAccountKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tableAccount);

        jLabel3.setText("Kategori");

        buttonSaveProfile.setText("Save Changes");
        buttonSaveProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveProfileActionPerformed(evt);
            }
        });

        buttonDeletAccount.setText("Delete");
        buttonDeletAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeletAccountActionPerformed(evt);
            }
        });

        buttonNewAccount.setText("Add");
        buttonNewAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNewAccountActionPerformed(evt);
            }
        });

        textSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textSearchKeyReleased(evt);
            }
        });

        jLabel10.setText("Nama Kategori");

        textKategori.setEditable(false);

        jLabel11.setText("Deskripsi");

        exitButton.setText("Exit");
        exitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitButtonMouseClicked(evt);
            }
        });

        jLabel4.setText("Kategori Baru");

        jLabel5.setText("Nama Kategori");

        jLabel6.setText("Deskripsi");

        textNewKategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNewKategoriActionPerformed(evt);
            }
        });

        jLabel7.setText("Search");

        teksDeskripsi.setColumns(20);
        teksDeskripsi.setRows(5);
        jScrollPane3.setViewportView(teksDeskripsi);

        textNewDeskripsi.setColumns(20);
        textNewDeskripsi.setRows(5);
        jScrollPane4.setViewportView(textNewDeskripsi);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textKategori, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                            .addComponent(jScrollPane3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(buttonSaveProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(buttonNewAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(buttonDeletAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(textNewKategori, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                                        .addComponent(jScrollPane4)))))))
                .addContainerGap(34, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(343, 343, 343)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exitButton)
                .addGap(160, 160, 160))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(textKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addComponent(buttonSaveProfile)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textNewKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonNewAccount, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buttonDeletAccount, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(exitButton)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonSaveProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveProfileActionPerformed
        String nama_kategori = textKategori.getText();
        String deskripsi = teksDeskripsi.getText();

        String sql = String.format(
            "update jabatan " +  
            "set " +
            "deskripsi = '%s' " +
            "where nama_kategori = '%s' ",
            deskripsi , nama_kategori);
        
        System.out.println(sql);
        int numMod = runUpdateQuery(sql);
        populateTableAccount();
        System.out.printf("%s row updated\n", numMod);
    }//GEN-LAST:event_buttonSaveProfileActionPerformed

    private void buttonDeletAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeletAccountActionPerformed
        String kategori = textKategori.getText();

        String sql = String.format(
            "delete from kategori " + 
            "where nama_kategori = '%s' ",
             kategori);
        try{
            Statement statement = connection.createStatement();
            System.out.println(sql);
            int numMod = statement.executeUpdate(sql);
            populateTableAccount();
            System.out.printf("%s row deleted\n", numMod);
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, "Ada error!");
            e.printStackTrace();
        }
    }//GEN-LAST:event_buttonDeletAccountActionPerformed

    private void buttonNewAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNewAccountActionPerformed
        if(!dataLengkap()){
            JOptionPane.showMessageDialog(null, "Silahkan Lengkapi Datanya !");
        }else{
            String kategori = textNewKategori.getText();
            String deskripsi = textNewDeskripsi.getText();

            String sql = String.format(
                "insert into kategori (nama_kategori, deskripsi) " +  
                "values ('%s', '%s');",
                kategori, deskripsi);
            System.out.println(sql);
            try{
                Statement statement = connection.createStatement();
                statement.executeUpdate(sql);
                System.out.println("Berhasil mendaftar kategori");
                populateTableAccount();
                resetForm();
                JOptionPane.showMessageDialog(null, "Berhasil mendaftar kategori");
            }catch(SQLException e) {
                JOptionPane.showMessageDialog(null, "Ada error ! Silahkan cek datanya");
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_buttonNewAccountActionPerformed

    private void tableAccountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableAccountKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tableAccountKeyPressed

    private void exitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMouseClicked
        try {connection.close();
            } catch (SQLException ex) {
        }
        this.dispose();
    }//GEN-LAST:event_exitButtonMouseClicked

    private void textNewKategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNewKategoriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textNewKategoriActionPerformed

    private void textSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textSearchKeyReleased
        DefaultTableModel tableModel = (DefaultTableModel)tableAccount.getModel();
        String search = textSearch.getText();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(tableModel);
        tableAccount.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_textSearchKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameKategori.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameKategori.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameKategori.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameKategori.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameKategori().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonDeletAccount;
    private javax.swing.JButton buttonNewAccount;
    private javax.swing.JButton buttonSaveProfile;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tableAccount;
    private javax.swing.JTextArea teksDeskripsi;
    private javax.swing.JTextField textKategori;
    private javax.swing.JTextArea textNewDeskripsi;
    private javax.swing.JTextField textNewKategori;
    private javax.swing.JTextField textSearch;
    // End of variables declaration//GEN-END:variables
}
